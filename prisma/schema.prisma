generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Order {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  user              User            @relation(fields: [userId], references: [id])
  userId            String          @db.ObjectId
  products          Product[]
  shippingAddress   ShippingAddress @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String          @unique @db.ObjectId
  paymentResult     String?
  numberOfItems     Int
  subTotal          Float
  tax               Float
  total             Float
  paidOut           Boolean         @default(false)
  paidAt            DateTime?
  createdAt         DateTime        @default(now())
  customer          Customer?
  transactionId     String?
}

type Address {
  city        String?
  country     String?
  line1       String?
  line2       String?
  postal_code String?
  state       String?
}

type Shipping {
  address Address?
  name    String?
  phone   String?
}

type MetaData {
  order_id String?
  user_id  String?
}

model Customer {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  cuid     String?   @unique
  email    String?
  name     String?
  phone    String?
  address  Address?
  shipping Shipping?
  metadata MetaData?
  order    Order?    @relation(fields: [orderId], references: [id])
  orderId  String?   @unique @db.ObjectId
}

model ShippingAddress {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  lastName     String
  address      String
  address2     String
  postal       String
  city         String
  country      String
  country_code String
  phone        String
  order        Order?
}

model Product {
  // productRef SeedProduct @relation(fields: [id], references: [id])
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  size    ValidSizes?
  amount  Int
  slug    String
  image   String
  price   Float
  order   Order?      @relation(fields: [orderId], references: [id])
  orderId String?     @db.ObjectId
}

model SeedProduct {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  description String
  images      String[]
  inStock     Float        @default(0)
  price       Float        @default(0)
  sizes       ValidSizes[]
  slug        String       @unique
  tags        String[]
  title       String
  type        ValidTypes
  gender      Gender
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
  // product     Product?
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  name          String
  password      String?
  status        UserStatus @default(offline)
  role          Role       @default(client)
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime?  @updatedAt
  orders        Order[]
}

enum Role {
  admin
  client
  super_user
  SEO
}

enum UserStatus {
  online
  offline
}

model Countries {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  code String
}

enum ValidSizes {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum ValidTypes {
  shirts
  pants
  hoodies
  hats
}

enum Gender {
  men
  women
  kid
  unisex
}

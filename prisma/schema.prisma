generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Order {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  user            User             @relation(fields: [userId], references: [id])
  userId          String           @db.ObjectId
  products        Product[]
  shippingAddress ShippingAddress?
  paymentResult   String?
  numberOfItems   Int
  subTotal        Float
  tax             Float
  total           Float
  paidOut         Boolean          @default(false)
  paidAt          DateTime?
}

type ShippingAddress {
  // id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  lastName String?
  address  String?
  address2 String?
  postal   String?
  city     String?
  country  String?
  phone    String?
  // order Order @relation("add")
  // Order    Order?
}

model Product {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  // productRef SeedProduct @relation(fields: [id], references: [id])
  title      String
  size       ValidSizes?
  amount     Int
  slug       String
  image      String
  price      Float
  order      Order       @relation(fields: [orderId], references: [id])
  orderId    String      @db.ObjectId
}

model SeedProduct {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  description String
  images      String[]
  inStock     Float        @default(0)
  price       Float        @default(0)
  sizes       ValidSizes[]
  slug        String       @unique
  tags        String[]
  title       String
  type        ValidTypes
  gender      Gender
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt()
  // product     Product?
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  name      String
  password  String?
  status    UserStatus @default(offline)
  role      Role       @default(client)
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt()
  orders    Order[]
}

enum Role {
  admin
  client
}

enum UserStatus {
  online
  offline
}

model Countries {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  code String
}

enum ValidSizes {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum ValidTypes {
  shirts
  pants
  hoodies
  hats
}

enum Gender {
  men
  women
  kid
  unisex
}
